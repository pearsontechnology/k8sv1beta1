# coding: utf-8

"""

    No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: extensions/v1beta1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class V1beta1NetworkPolicyIngressRule(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, Ports=None, From=None):
        """
        V1beta1NetworkPolicyIngressRule - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'Ports': 'list[V1beta1NetworkPolicyPort]',
            'From': 'list[V1beta1NetworkPolicyPeer]'
        }

        self.attribute_map = {
            'Ports': 'ports',
            'From': 'from'
        }

        self._Ports = Ports
        self._From = From

    @property
    def Ports(self):
        """
        Gets the Ports of this V1beta1NetworkPolicyIngressRule.
        List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is not provided, this rule matches all ports (traffic not restricted by port). If this field is empty, this rule matches no ports (no traffic matches). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.

        :return: The Ports of this V1beta1NetworkPolicyIngressRule.
        :rtype: list[V1beta1NetworkPolicyPort]
        """
        return self._Ports

    @Ports.setter
    def Ports(self, Ports):
        """
        Sets the Ports of this V1beta1NetworkPolicyIngressRule.
        List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is not provided, this rule matches all ports (traffic not restricted by port). If this field is empty, this rule matches no ports (no traffic matches). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.

        :param Ports: The Ports of this V1beta1NetworkPolicyIngressRule.
        :type: list[V1beta1NetworkPolicyPort]
        """

        self._Ports = Ports

    @property
    def From(self):
        """
        Gets the From of this V1beta1NetworkPolicyIngressRule.
        List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is not provided, this rule matches all sources (traffic not restricted by source). If this field is empty, this rule matches no sources (no traffic matches). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.

        :return: The From of this V1beta1NetworkPolicyIngressRule.
        :rtype: list[V1beta1NetworkPolicyPeer]
        """
        return self._From

    @From.setter
    def From(self, From):
        """
        Sets the From of this V1beta1NetworkPolicyIngressRule.
        List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is not provided, this rule matches all sources (traffic not restricted by source). If this field is empty, this rule matches no sources (no traffic matches). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.

        :param From: The From of this V1beta1NetworkPolicyIngressRule.
        :type: list[V1beta1NetworkPolicyPeer]
        """

        self._From = From

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
