# coding: utf-8

"""
    

    No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: extensions/v1beta1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class V1beta1HorizontalPodAutoscalerStatus(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, observedGeneration=None, lastScaleTime=None, currentReplicas=None, desiredReplicas=None, currentCPUUtilizationPercentage=None):
        """
        V1beta1HorizontalPodAutoscalerStatus - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'observedGeneration': 'int',
            'lastScaleTime': 'datetime',
            'currentReplicas': 'int',
            'desiredReplicas': 'int',
            'currentCPUUtilizationPercentage': 'int'
        }

        self.attribute_map = {
            'observedGeneration': 'observedGeneration',
            'lastScaleTime': 'lastScaleTime',
            'currentReplicas': 'currentReplicas',
            'desiredReplicas': 'desiredReplicas',
            'currentCPUUtilizationPercentage': 'currentCPUUtilizationPercentage'
        }

        self._observedGeneration = observedGeneration
        self._lastScaleTime = lastScaleTime
        self._currentReplicas = currentReplicas
        self._desiredReplicas = desiredReplicas
        self._currentCPUUtilizationPercentage = currentCPUUtilizationPercentage

    @property
    def observedGeneration(self):
        """
        Gets the observedGeneration of this V1beta1HorizontalPodAutoscalerStatus.
        most recent generation observed by this autoscaler.

        :return: The observedGeneration of this V1beta1HorizontalPodAutoscalerStatus.
        :rtype: int
        """
        return self._observedGeneration

    @observedGeneration.setter
    def observedGeneration(self, observedGeneration):
        """
        Sets the observedGeneration of this V1beta1HorizontalPodAutoscalerStatus.
        most recent generation observed by this autoscaler.

        :param observedGeneration: The observedGeneration of this V1beta1HorizontalPodAutoscalerStatus.
        :type: int
        """

        self._observedGeneration = observedGeneration

    @property
    def lastScaleTime(self):
        """
        Gets the lastScaleTime of this V1beta1HorizontalPodAutoscalerStatus.
        last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.

        :return: The lastScaleTime of this V1beta1HorizontalPodAutoscalerStatus.
        :rtype: datetime
        """
        return self._lastScaleTime

    @lastScaleTime.setter
    def lastScaleTime(self, lastScaleTime):
        """
        Sets the lastScaleTime of this V1beta1HorizontalPodAutoscalerStatus.
        last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.

        :param lastScaleTime: The lastScaleTime of this V1beta1HorizontalPodAutoscalerStatus.
        :type: datetime
        """

        self._lastScaleTime = lastScaleTime

    @property
    def currentReplicas(self):
        """
        Gets the currentReplicas of this V1beta1HorizontalPodAutoscalerStatus.
        current number of replicas of pods managed by this autoscaler.

        :return: The currentReplicas of this V1beta1HorizontalPodAutoscalerStatus.
        :rtype: int
        """
        return self._currentReplicas

    @currentReplicas.setter
    def currentReplicas(self, currentReplicas):
        """
        Sets the currentReplicas of this V1beta1HorizontalPodAutoscalerStatus.
        current number of replicas of pods managed by this autoscaler.

        :param currentReplicas: The currentReplicas of this V1beta1HorizontalPodAutoscalerStatus.
        :type: int
        """

        self._currentReplicas = currentReplicas

    @property
    def desiredReplicas(self):
        """
        Gets the desiredReplicas of this V1beta1HorizontalPodAutoscalerStatus.
        desired number of replicas of pods managed by this autoscaler.

        :return: The desiredReplicas of this V1beta1HorizontalPodAutoscalerStatus.
        :rtype: int
        """
        return self._desiredReplicas

    @desiredReplicas.setter
    def desiredReplicas(self, desiredReplicas):
        """
        Sets the desiredReplicas of this V1beta1HorizontalPodAutoscalerStatus.
        desired number of replicas of pods managed by this autoscaler.

        :param desiredReplicas: The desiredReplicas of this V1beta1HorizontalPodAutoscalerStatus.
        :type: int
        """

        self._desiredReplicas = desiredReplicas

    @property
    def currentCPUUtilizationPercentage(self):
        """
        Gets the currentCPUUtilizationPercentage of this V1beta1HorizontalPodAutoscalerStatus.
        current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.

        :return: The currentCPUUtilizationPercentage of this V1beta1HorizontalPodAutoscalerStatus.
        :rtype: int
        """
        return self._currentCPUUtilizationPercentage

    @currentCPUUtilizationPercentage.setter
    def currentCPUUtilizationPercentage(self, currentCPUUtilizationPercentage):
        """
        Sets the currentCPUUtilizationPercentage of this V1beta1HorizontalPodAutoscalerStatus.
        current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.

        :param currentCPUUtilizationPercentage: The currentCPUUtilizationPercentage of this V1beta1HorizontalPodAutoscalerStatus.
        :type: int
        """

        self._currentCPUUtilizationPercentage = currentCPUUtilizationPercentage

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
